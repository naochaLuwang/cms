generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  email          String       @unique
  name           String?
  emailVerified  DateTime?
  hashedPassword String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  accounts       Account[]
  Orgsetting     Orgsetting[]
  Menu           Menu[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Menu {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String    @unique
  slug     String
  order    Int
  submenus Submenu[]
  status   String
  pageType String
  userId   String    @db.ObjectId
  content  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Submenu {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  menuId   String @db.ObjectId
  title    String @unique
  slug     String
  order    Int
  status   String
  content  String
  pageType String

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  menu       Menu         @relation(fields: [menuId], references: [id], onDelete: Cascade)
  Subsubmenu Subsubmenu[]
}

model Subsubmenu {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  submenuId String @db.ObjectId
  title     String @unique
  slug      String
  order     Int
  status    String
  content   String
  pageType  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  subMenu   Submenu  @relation(fields: [submenuId], references: [id], onDelete: Cascade)
}

model Orgsetting {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  name        String
  phone       String
  email       String
  add1        String
  add2        String
  mtitle      String
  description String
  facebook    String
  linkedin    String
  instagram   String
  logoUrl     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
